#include <iostream>
#include <vector>
#include "ProjectionParameters.h"
#include "Image.h"
#include "Scanner.h"

int main(int argc, const char* argv[])
{
	bool outputAll = false;
	if(argc > 1)
	{
		outputAll = (bool)std::atoi(argv[1]);
	}
	
  auto params = Projection::ProjectionParameters(50.0, 55.0, 128, 128, 128, 10.0, 360.0);
  Projection::PrintProjectionParameters(params);
  
  auto image_row_order = Image::ImageAoS(params, Image::ImageOrder::ROW_MAJOR);
  auto image_col_order = Image::ImageAoS(params, Image::ImageOrder::COL_MAJOR);
  std::cout << "Image: " << image_row_order.rows << "x" << image_row_order.cols << "x" << image_row_order.half_width << std::endl;
  auto scanner = Scanner::Scanner(params);
	std::cout << "Source loc: 0 deg (" << scanner.source.x << "," << scanner.source.y << ")\n";
	std::cout << "Det loc: 0 deg(" << scanner.detectors[64].x << "," << scanner.detectors[64].y << ")\n";
//	std::cout << "Det loc: 0 deg(" << scanner.detectors[12].x << "," << scanner.detectors[12].y << ")\n";
	
	double theta = 40;
	Scanner::RotateScanner(&scanner, theta);
	std::cout << "Source loc: " << theta << " deg (" << scanner.source.x << "," << scanner.source.y << ")\n";
  std::cout << "Det loc: " << theta << " deg (" << scanner.detectors[64].x << "," << scanner.detectors[64].y << ")\n";
  
  double y = Projection::Project_x(scanner.source, scanner.detectors[64], 0, 2*image_row_order.half_width);
  std::cout << "Projected point " << theta << " deg (" << y << ")" << std::endl;
  
  double delta = 0;
  theta += delta;
	Scanner::RotateScanner(&scanner, delta);
	std::cout << "Source loc: " << theta << " deg (" << scanner.source.x << "," << scanner.source.y << ")\n";
//	for(int i=0; i<scanner.detectors.size(); i++)
//  	std::cout << i << ": " <<  theta << "," << scanner.detectors[i].x << "," << scanner.detectors[i].y << "\n";
  
  std::vector<double> intervals(scanner.detectors.size());
  
  double num_detectors = (double)scanner.detectors.size();
  for(int i=0; i<scanner.detectors.size(); i++)
  {
		double x = Projection::Project_y(scanner.source, scanner.detectors[i], 5.0, 2*image_row_order.half_width);
		std::cout << i << ": " << theta << "," << x << " wtf\n";
//		if(x<num
  }
//  Scanner::RotateScanner(&scanner, -theta);
//  std::cout << "Det loc: 45 deg (" << scanner.detectors[12].x << "," << scanner.detectors[12].y << ")\n";
  
  if(outputAll)
  {
		Image::makeUnitDisk(image_row_order, 50);
		Image::printImage(image_row_order);
		Image::printImageCoords(image_row_order, image_col_order);
		for(auto detector : scanner.detectors)
		{
			double x = Projection::Project_y(scanner.source, detector, 0, 2*image_row_order.half_width);
			std::cout << detector.x << "," << detector.y << "," << x << ";\n";
		}
		
//		std::cout << "Src loc: 0 deg (" << scanner.source.x << "," << scanner.source.y << ")\n";
//		std::cout << "Det loc: 0 deg (" << scanner.detectors[64].x << "," << scanner.detectors[64].y << ")\n";
//		double theta =  30.0;
//		for(double i=theta; i<=360; i+=theta)
//		{
//			Projection::RotatePointValue(&scanner.source, theta);
//			Scanner::RotateScanner(&scanner, theta);
//			std::cout << "Src loc: " << i <<  " deg (" << scanner.source.x << "," << scanner.source.y << ")\n";
//			std::cout << "Det loc: " << i <<  " deg (" << scanner.detectors[64].x << "," << scanner.detectors[64].y << ")\n";
//		}
	}
	
  return 0;
}
